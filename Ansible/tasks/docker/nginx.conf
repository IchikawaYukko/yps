events {
  worker_connections 512;
  use epoll;
}
http {
  server_tokens off;

  add_header X-XSS-Protection "1; mode=block";
  add_header X-Content-Type-Options nosniff;
  add_header Referrer-Policy no-referrer-when-downgrade;
  add_header Feature-Policy 'sync-xhr self;';

  gzip on;
  gzip_types text/css application/javascript application/json application/octet-stream;

  # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_session_tickets off;

  # modern cihper configuration.
  ssl_protocols TLSv1.3 TLSv1.2;
  ssl_ciphers 'TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-256-GCM-SHA384:TLS13-AES-128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
  ssl_ecdh_curve secp521r1:secp384r1;
  ssl_prefer_server_ciphers on;

  # OCSP Stapling ---
  # fetch OCSP records from URL in ssl_certificate and cache them
  ssl_stapling on;
  ssl_stapling_verify on;

  resolver 1.1.1.1;

  server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;

    # Let's Encrypt Verification
    location ^~ /.well-known/acme-challenge/ {
      default_type "text/plain";
      root /var/www/html;
    }
    # http -> https redirect
    location / {
      return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name yps.yuriko.co.nz;

    client_max_body_size 20M;

    ssl_certificate /etc/letsencrypt/live/yps.yuriko.co.nz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yps.yuriko.co.nz/privkey.pem;
    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/yps.yuriko.co.nz/fullchain.pem;

    index index.php index.html;
    root /var/www/html/yps/public;
    add_header Content-Security-Policy "default-src 'none'; img-src *; style-src https: 'unsafe-inline'; script-src https: 'unsafe-eval' 'unsafe-inline'; base-uri 'self'; form-action 'self' https://*.twitter.com/i/jot; frame-src 'self' https://*.twitter.com/ https://www.facebook.com/ https://*.hatena.ne.jp/; frame-ancestors 'self'; connect-src 'self' https://object-storage.tyo1.conoha.io/; require-trusted-types-for 'script';";

    location / {
      include /etc/nginx/mime.types;
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(\.+)$;
        fastcgi_pass php-fpm:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
  }
}
